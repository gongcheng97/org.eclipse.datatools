DBEvent.Name=Events
DBEvent.DisplayName=Events
Synonym.Name=Synonyms
Synonym.DisplayName=Synonyms
Synonym.NameDecoration=\ (-> {0})

ProcedureParameter.Name=Parameters
ProcedureParameter.DisplayName=Parameters

HoverInfoBuilder.alter.database    = 
HoverInfoBuilder.alter.event       = 
HoverInfoBuilder.alter.function    = 
HoverInfoBuilder.alter.index       = 
HoverInfoBuilder.alter.procedure   = 
HoverInfoBuilder.alter.table       = alter table [schema.]table_name\nadd [column] column_name format [default_clause]\n[null_clause] [column_constraint] [collate collation_name]\n| drop [column] column_name restrict | cascade\n| add [constraint constraint_name] constraint_spec\n| drop constraint constraint_name restrict | cascade\n| alter [column] column_name format [default_clause]\n[null_clause] [column_constraint] [collate collation_name]
HoverInfoBuilder.alter.trigger     = 
HoverInfoBuilder.alter.view        = 
HoverInfoBuilder.begin             = 
HoverInfoBuilder.begin.transaction = 
HoverInfoBuilder.call              = call system (command =command_string)
HoverInfoBuilder.create.database   = 
HoverInfoBuilder.create.default    = 
HoverInfoBuilder.create.event      = 
HoverInfoBuilder.create.function   = 
HoverInfoBuilder.create.index      = 
HoverInfoBuilder.create.procedure  = 
HoverInfoBuilder.create.table      = create table [schema.] table_name\n(column_specification {, column_specification }\n[, [constraint constraint_name] table_constraint\n{, [constraint constraint_name] table_constraint}])\n[with with_clause]
HoverInfoBuilder.create.trigger    = 
HoverInfoBuilder.create.view       = create view view_name\r\n[(column_name {, column_name})]\r\nas select_stmt\r\n[with check option]
HoverInfoBuilder.declare           = declare statement_name {, statement_name) statement
HoverInfoBuilder.delete            = delete from [schema.]table_name [corr_name]\n[where search_condition];
HoverInfoBuilder.drop.view         = drop objecttype [schema.]objectname {, [schema.]objectname};
HoverInfoBuilder.insert            = insert into [schema.]table_name\n[(column {, column})]\n[values (expr{, expr})] | [subselect];
HoverInfoBuilder.others            = 
HoverInfoBuilder.root              = 
HoverInfoBuilder.select            = select [first rowCount] [all | distinct]\n[from from_source {, from_source}\n[where search_condition]\n[group by column {, column}]\n[having search_condition]\n[union [all] full_select]\n[order by result_column [asc|desc]\n{, result_column [asc|desc]}]\n[for [deferred | direct] update of column {, column}];
HoverInfoBuilder.select.into       = 
HoverInfoBuilder.update            = update [schema.]table_name [corr_name]\n[from [schema.]table_name [corr_name]\n{ , [schema.]table_name [corr_name]}]\nset column = expression {, column = expression}\n[where search_condition];
